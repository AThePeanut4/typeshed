"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class Replication:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        id: Incomplete | None = None,
        name: Incomplete | None = None,
        description: Incomplete | None = None,
        org_id: Incomplete | None = None,
        remote_id: Incomplete | None = None,
        local_bucket_id: Incomplete | None = None,
        remote_bucket_id: Incomplete | None = None,
        remote_bucket_name: str | None = None,
        max_queue_size_bytes: Incomplete | None = None,
        current_queue_size_bytes: Incomplete | None = None,
        remaining_bytes_to_be_synced: int | None = None,
        latest_response_code: Incomplete | None = None,
        latest_error_message: Incomplete | None = None,
        drop_non_retryable_data: Incomplete | None = None,
    ) -> None:
        """Replication - a model defined in OpenAPI."""
        ...
    @property
    def id(self):
        """
        Get the id of this Replication.

        :return: The id of this Replication.
        :rtype: str
        """
        ...
    @id.setter
    def id(self, id) -> None:
        """
        Get the id of this Replication.

        :return: The id of this Replication.
        :rtype: str
        """
        ...
    @property
    def name(self):
        """
        Get the name of this Replication.

        :return: The name of this Replication.
        :rtype: str
        """
        ...
    @name.setter
    def name(self, name) -> None:
        """
        Get the name of this Replication.

        :return: The name of this Replication.
        :rtype: str
        """
        ...
    @property
    def description(self):
        """
        Get the description of this Replication.

        :return: The description of this Replication.
        :rtype: str
        """
        ...
    @description.setter
    def description(self, description) -> None:
        """
        Get the description of this Replication.

        :return: The description of this Replication.
        :rtype: str
        """
        ...
    @property
    def org_id(self):
        """
        Get the org_id of this Replication.

        :return: The org_id of this Replication.
        :rtype: str
        """
        ...
    @org_id.setter
    def org_id(self, org_id) -> None:
        """
        Get the org_id of this Replication.

        :return: The org_id of this Replication.
        :rtype: str
        """
        ...
    @property
    def remote_id(self):
        """
        Get the remote_id of this Replication.

        :return: The remote_id of this Replication.
        :rtype: str
        """
        ...
    @remote_id.setter
    def remote_id(self, remote_id) -> None:
        """
        Get the remote_id of this Replication.

        :return: The remote_id of this Replication.
        :rtype: str
        """
        ...
    @property
    def local_bucket_id(self):
        """
        Get the local_bucket_id of this Replication.

        :return: The local_bucket_id of this Replication.
        :rtype: str
        """
        ...
    @local_bucket_id.setter
    def local_bucket_id(self, local_bucket_id) -> None:
        """
        Get the local_bucket_id of this Replication.

        :return: The local_bucket_id of this Replication.
        :rtype: str
        """
        ...
    @property
    def remote_bucket_id(self):
        """
        Get the remote_bucket_id of this Replication.

        :return: The remote_bucket_id of this Replication.
        :rtype: str
        """
        ...
    @remote_bucket_id.setter
    def remote_bucket_id(self, remote_bucket_id) -> None:
        """
        Get the remote_bucket_id of this Replication.

        :return: The remote_bucket_id of this Replication.
        :rtype: str
        """
        ...
    remote_bucket_name: str | None
    @property
    def max_queue_size_bytes(self):
        """
        Get the max_queue_size_bytes of this Replication.

        :return: The max_queue_size_bytes of this Replication.
        :rtype: int
        """
        ...
    @max_queue_size_bytes.setter
    def max_queue_size_bytes(self, max_queue_size_bytes) -> None:
        """
        Get the max_queue_size_bytes of this Replication.

        :return: The max_queue_size_bytes of this Replication.
        :rtype: int
        """
        ...
    @property
    def current_queue_size_bytes(self):
        """
        Get the current_queue_size_bytes of this Replication.

        :return: The current_queue_size_bytes of this Replication.
        :rtype: int
        """
        ...
    @current_queue_size_bytes.setter
    def current_queue_size_bytes(self, current_queue_size_bytes) -> None:
        """
        Get the current_queue_size_bytes of this Replication.

        :return: The current_queue_size_bytes of this Replication.
        :rtype: int
        """
        ...
    remaining_bytes_to_be_synced: int | None
    @property
    def latest_response_code(self):
        """
        Get the latest_response_code of this Replication.

        :return: The latest_response_code of this Replication.
        :rtype: int
        """
        ...
    @latest_response_code.setter
    def latest_response_code(self, latest_response_code) -> None:
        """
        Get the latest_response_code of this Replication.

        :return: The latest_response_code of this Replication.
        :rtype: int
        """
        ...
    @property
    def latest_error_message(self):
        """
        Get the latest_error_message of this Replication.

        :return: The latest_error_message of this Replication.
        :rtype: str
        """
        ...
    @latest_error_message.setter
    def latest_error_message(self, latest_error_message) -> None:
        """
        Get the latest_error_message of this Replication.

        :return: The latest_error_message of this Replication.
        :rtype: str
        """
        ...
    @property
    def drop_non_retryable_data(self):
        """
        Get the drop_non_retryable_data of this Replication.

        :return: The drop_non_retryable_data of this Replication.
        :rtype: bool
        """
        ...
    @drop_non_retryable_data.setter
    def drop_non_retryable_data(self, drop_non_retryable_data) -> None:
        """
        Get the drop_non_retryable_data of this Replication.

        :return: The drop_non_retryable_data of this Replication.
        :rtype: bool
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
