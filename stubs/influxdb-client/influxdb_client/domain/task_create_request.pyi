"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class TaskCreateRequest:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        org_id: Incomplete | None = None,
        org: Incomplete | None = None,
        status: Incomplete | None = None,
        flux: Incomplete | None = None,
        description: Incomplete | None = None,
    ) -> None:
        """TaskCreateRequest - a model defined in OpenAPI."""
        ...
    @property
    def org_id(self):
        """
        Get the org_id of this TaskCreateRequest.

        The ID of the organization that owns this Task.

        :return: The org_id of this TaskCreateRequest.
        :rtype: str
        """
        ...
    @org_id.setter
    def org_id(self, org_id) -> None:
        """
        Get the org_id of this TaskCreateRequest.

        The ID of the organization that owns this Task.

        :return: The org_id of this TaskCreateRequest.
        :rtype: str
        """
        ...
    @property
    def org(self):
        """
        Get the org of this TaskCreateRequest.

        The name of the organization that owns this Task.

        :return: The org of this TaskCreateRequest.
        :rtype: str
        """
        ...
    @org.setter
    def org(self, org) -> None:
        """
        Get the org of this TaskCreateRequest.

        The name of the organization that owns this Task.

        :return: The org of this TaskCreateRequest.
        :rtype: str
        """
        ...
    @property
    def status(self):
        """
        Get the status of this TaskCreateRequest.

        :return: The status of this TaskCreateRequest.
        :rtype: TaskStatusType
        """
        ...
    @status.setter
    def status(self, status) -> None:
        """
        Get the status of this TaskCreateRequest.

        :return: The status of this TaskCreateRequest.
        :rtype: TaskStatusType
        """
        ...
    @property
    def flux(self):
        """
        Get the flux of this TaskCreateRequest.

        The Flux script to run for this task.

        :return: The flux of this TaskCreateRequest.
        :rtype: str
        """
        ...
    @flux.setter
    def flux(self, flux) -> None:
        """
        Get the flux of this TaskCreateRequest.

        The Flux script to run for this task.

        :return: The flux of this TaskCreateRequest.
        :rtype: str
        """
        ...
    @property
    def description(self):
        """
        Get the description of this TaskCreateRequest.

        An optional description of the task.

        :return: The description of this TaskCreateRequest.
        :rtype: str
        """
        ...
    @description.setter
    def description(self, description) -> None:
        """
        Get the description of this TaskCreateRequest.

        An optional description of the task.

        :return: The description of this TaskCreateRequest.
        :rtype: str
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
