"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class StaticLegend:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        colorize_rows: Incomplete | None = None,
        height_ratio: Incomplete | None = None,
        show: Incomplete | None = None,
        opacity: Incomplete | None = None,
        orientation_threshold: Incomplete | None = None,
        value_axis: Incomplete | None = None,
        width_ratio: Incomplete | None = None,
    ) -> None:
        """StaticLegend - a model defined in OpenAPI."""
        ...
    @property
    def colorize_rows(self):
        """
        Get the colorize_rows of this StaticLegend.

        :return: The colorize_rows of this StaticLegend.
        :rtype: bool
        """
        ...
    @colorize_rows.setter
    def colorize_rows(self, colorize_rows) -> None:
        """
        Get the colorize_rows of this StaticLegend.

        :return: The colorize_rows of this StaticLegend.
        :rtype: bool
        """
        ...
    @property
    def height_ratio(self):
        """
        Get the height_ratio of this StaticLegend.

        :return: The height_ratio of this StaticLegend.
        :rtype: float
        """
        ...
    @height_ratio.setter
    def height_ratio(self, height_ratio) -> None:
        """
        Get the height_ratio of this StaticLegend.

        :return: The height_ratio of this StaticLegend.
        :rtype: float
        """
        ...
    @property
    def show(self):
        """
        Get the show of this StaticLegend.

        :return: The show of this StaticLegend.
        :rtype: bool
        """
        ...
    @show.setter
    def show(self, show) -> None:
        """
        Get the show of this StaticLegend.

        :return: The show of this StaticLegend.
        :rtype: bool
        """
        ...
    @property
    def opacity(self):
        """
        Get the opacity of this StaticLegend.

        :return: The opacity of this StaticLegend.
        :rtype: float
        """
        ...
    @opacity.setter
    def opacity(self, opacity) -> None:
        """
        Get the opacity of this StaticLegend.

        :return: The opacity of this StaticLegend.
        :rtype: float
        """
        ...
    @property
    def orientation_threshold(self):
        """
        Get the orientation_threshold of this StaticLegend.

        :return: The orientation_threshold of this StaticLegend.
        :rtype: int
        """
        ...
    @orientation_threshold.setter
    def orientation_threshold(self, orientation_threshold) -> None:
        """
        Get the orientation_threshold of this StaticLegend.

        :return: The orientation_threshold of this StaticLegend.
        :rtype: int
        """
        ...
    @property
    def value_axis(self):
        """
        Get the value_axis of this StaticLegend.

        :return: The value_axis of this StaticLegend.
        :rtype: str
        """
        ...
    @value_axis.setter
    def value_axis(self, value_axis) -> None:
        """
        Get the value_axis of this StaticLegend.

        :return: The value_axis of this StaticLegend.
        :rtype: str
        """
        ...
    @property
    def width_ratio(self):
        """
        Get the width_ratio of this StaticLegend.

        :return: The width_ratio of this StaticLegend.
        :rtype: float
        """
        ...
    @width_ratio.setter
    def width_ratio(self, width_ratio) -> None:
        """
        Get the width_ratio of this StaticLegend.

        :return: The width_ratio of this StaticLegend.
        :rtype: float
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
