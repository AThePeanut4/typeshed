"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class MeasurementSchemaCreateRequest:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(self, name: Incomplete | None = None, columns: Incomplete | None = None) -> None:
        """MeasurementSchemaCreateRequest - a model defined in OpenAPI."""
        ...
    @property
    def name(self):
        """
        Get the name of this MeasurementSchemaCreateRequest.

        The [measurement](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#measurement) name.

        :return: The name of this MeasurementSchemaCreateRequest.
        :rtype: str
        """
        ...
    @name.setter
    def name(self, name) -> None:
        """
        Get the name of this MeasurementSchemaCreateRequest.

        The [measurement](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#measurement) name.

        :return: The name of this MeasurementSchemaCreateRequest.
        :rtype: str
        """
        ...
    @property
    def columns(self):
        """
        Get the columns of this MeasurementSchemaCreateRequest.

        Ordered collection of column definitions.

        :return: The columns of this MeasurementSchemaCreateRequest.
        :rtype: list[MeasurementSchemaColumn]
        """
        ...
    @columns.setter
    def columns(self, columns) -> None:
        """
        Get the columns of this MeasurementSchemaCreateRequest.

        Ordered collection of column definitions.

        :return: The columns of this MeasurementSchemaCreateRequest.
        :rtype: list[MeasurementSchemaColumn]
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
