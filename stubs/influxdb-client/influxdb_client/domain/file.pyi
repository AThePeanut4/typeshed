"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class File:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        type: Incomplete | None = None,
        name: Incomplete | None = None,
        package: Incomplete | None = None,
        imports: Incomplete | None = None,
        body: Incomplete | None = None,
    ) -> None:
        """File - a model defined in OpenAPI."""
        ...
    @property
    def type(self):
        """
        Get the type of this File.

        Type of AST node

        :return: The type of this File.
        :rtype: str
        """
        ...
    @type.setter
    def type(self, type) -> None:
        """
        Get the type of this File.

        Type of AST node

        :return: The type of this File.
        :rtype: str
        """
        ...
    @property
    def name(self):
        """
        Get the name of this File.

        The name of the file.

        :return: The name of this File.
        :rtype: str
        """
        ...
    @name.setter
    def name(self, name) -> None:
        """
        Get the name of this File.

        The name of the file.

        :return: The name of this File.
        :rtype: str
        """
        ...
    @property
    def package(self):
        """
        Get the package of this File.

        :return: The package of this File.
        :rtype: PackageClause
        """
        ...
    @package.setter
    def package(self, package) -> None:
        """
        Get the package of this File.

        :return: The package of this File.
        :rtype: PackageClause
        """
        ...
    @property
    def imports(self):
        """
        Get the imports of this File.

        A list of package imports

        :return: The imports of this File.
        :rtype: list[ImportDeclaration]
        """
        ...
    @imports.setter
    def imports(self, imports) -> None:
        """
        Get the imports of this File.

        A list of package imports

        :return: The imports of this File.
        :rtype: list[ImportDeclaration]
        """
        ...
    @property
    def body(self):
        """
        Get the body of this File.

        List of Flux statements

        :return: The body of this File.
        :rtype: list[Statement]
        """
        ...
    @body.setter
    def body(self, body) -> None:
        """
        Get the body of this File.

        List of Flux statements

        :return: The body of this File.
        :rtype: list[Statement]
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
