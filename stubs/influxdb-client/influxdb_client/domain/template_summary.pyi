"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class TemplateSummary:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        sources: Incomplete | None = None,
        stack_id: Incomplete | None = None,
        summary: Incomplete | None = None,
        diff: Incomplete | None = None,
        errors: Incomplete | None = None,
    ) -> None:
        """TemplateSummary - a model defined in OpenAPI."""
        ...
    @property
    def sources(self):
        """
        Get the sources of this TemplateSummary.

        :return: The sources of this TemplateSummary.
        :rtype: list[str]
        """
        ...
    @sources.setter
    def sources(self, sources) -> None:
        """
        Get the sources of this TemplateSummary.

        :return: The sources of this TemplateSummary.
        :rtype: list[str]
        """
        ...
    @property
    def stack_id(self):
        """
        Get the stack_id of this TemplateSummary.

        :return: The stack_id of this TemplateSummary.
        :rtype: str
        """
        ...
    @stack_id.setter
    def stack_id(self, stack_id) -> None:
        """
        Get the stack_id of this TemplateSummary.

        :return: The stack_id of this TemplateSummary.
        :rtype: str
        """
        ...
    @property
    def summary(self):
        """
        Get the summary of this TemplateSummary.

        :return: The summary of this TemplateSummary.
        :rtype: TemplateSummarySummary
        """
        ...
    @summary.setter
    def summary(self, summary) -> None:
        """
        Get the summary of this TemplateSummary.

        :return: The summary of this TemplateSummary.
        :rtype: TemplateSummarySummary
        """
        ...
    @property
    def diff(self):
        """
        Get the diff of this TemplateSummary.

        :return: The diff of this TemplateSummary.
        :rtype: TemplateSummaryDiff
        """
        ...
    @diff.setter
    def diff(self, diff) -> None:
        """
        Get the diff of this TemplateSummary.

        :return: The diff of this TemplateSummary.
        :rtype: TemplateSummaryDiff
        """
        ...
    @property
    def errors(self):
        """
        Get the errors of this TemplateSummary.

        :return: The errors of this TemplateSummary.
        :rtype: list[TemplateSummaryErrors]
        """
        ...
    @errors.setter
    def errors(self, errors) -> None:
        """
        Get the errors of this TemplateSummary.

        :return: The errors of this TemplateSummary.
        :rtype: list[TemplateSummaryErrors]
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
