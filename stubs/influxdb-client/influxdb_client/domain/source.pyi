"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class Source:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        links: Incomplete | None = None,
        id: Incomplete | None = None,
        org_id: Incomplete | None = None,
        default: Incomplete | None = None,
        name: Incomplete | None = None,
        type: Incomplete | None = None,
        url: Incomplete | None = None,
        insecure_skip_verify: Incomplete | None = None,
        telegraf: Incomplete | None = None,
        token: Incomplete | None = None,
        username: Incomplete | None = None,
        password: Incomplete | None = None,
        shared_secret: Incomplete | None = None,
        meta_url: Incomplete | None = None,
        default_rp: Incomplete | None = None,
        languages: Incomplete | None = None,
    ) -> None:
        """Source - a model defined in OpenAPI."""
        ...
    @property
    def links(self):
        """
        Get the links of this Source.

        :return: The links of this Source.
        :rtype: SourceLinks
        """
        ...
    @links.setter
    def links(self, links) -> None:
        """
        Get the links of this Source.

        :return: The links of this Source.
        :rtype: SourceLinks
        """
        ...
    @property
    def id(self):
        """
        Get the id of this Source.

        :return: The id of this Source.
        :rtype: str
        """
        ...
    @id.setter
    def id(self, id) -> None:
        """
        Get the id of this Source.

        :return: The id of this Source.
        :rtype: str
        """
        ...
    @property
    def org_id(self):
        """
        Get the org_id of this Source.

        :return: The org_id of this Source.
        :rtype: str
        """
        ...
    @org_id.setter
    def org_id(self, org_id) -> None:
        """
        Get the org_id of this Source.

        :return: The org_id of this Source.
        :rtype: str
        """
        ...
    @property
    def default(self):
        """
        Get the default of this Source.

        :return: The default of this Source.
        :rtype: bool
        """
        ...
    @default.setter
    def default(self, default) -> None:
        """
        Get the default of this Source.

        :return: The default of this Source.
        :rtype: bool
        """
        ...
    @property
    def name(self):
        """
        Get the name of this Source.

        :return: The name of this Source.
        :rtype: str
        """
        ...
    @name.setter
    def name(self, name) -> None:
        """
        Get the name of this Source.

        :return: The name of this Source.
        :rtype: str
        """
        ...
    @property
    def type(self):
        """
        Get the type of this Source.

        :return: The type of this Source.
        :rtype: str
        """
        ...
    @type.setter
    def type(self, type) -> None:
        """
        Get the type of this Source.

        :return: The type of this Source.
        :rtype: str
        """
        ...
    @property
    def url(self):
        """
        Get the url of this Source.

        :return: The url of this Source.
        :rtype: str
        """
        ...
    @url.setter
    def url(self, url) -> None:
        """
        Get the url of this Source.

        :return: The url of this Source.
        :rtype: str
        """
        ...
    @property
    def insecure_skip_verify(self):
        """
        Get the insecure_skip_verify of this Source.

        :return: The insecure_skip_verify of this Source.
        :rtype: bool
        """
        ...
    @insecure_skip_verify.setter
    def insecure_skip_verify(self, insecure_skip_verify) -> None:
        """
        Get the insecure_skip_verify of this Source.

        :return: The insecure_skip_verify of this Source.
        :rtype: bool
        """
        ...
    @property
    def telegraf(self):
        """
        Get the telegraf of this Source.

        :return: The telegraf of this Source.
        :rtype: str
        """
        ...
    @telegraf.setter
    def telegraf(self, telegraf) -> None:
        """
        Get the telegraf of this Source.

        :return: The telegraf of this Source.
        :rtype: str
        """
        ...
    @property
    def token(self):
        """
        Get the token of this Source.

        :return: The token of this Source.
        :rtype: str
        """
        ...
    @token.setter
    def token(self, token) -> None:
        """
        Get the token of this Source.

        :return: The token of this Source.
        :rtype: str
        """
        ...
    @property
    def username(self):
        """
        Get the username of this Source.

        :return: The username of this Source.
        :rtype: str
        """
        ...
    @username.setter
    def username(self, username) -> None:
        """
        Get the username of this Source.

        :return: The username of this Source.
        :rtype: str
        """
        ...
    @property
    def password(self):
        """
        Get the password of this Source.

        :return: The password of this Source.
        :rtype: str
        """
        ...
    @password.setter
    def password(self, password) -> None:
        """
        Get the password of this Source.

        :return: The password of this Source.
        :rtype: str
        """
        ...
    @property
    def shared_secret(self):
        """
        Get the shared_secret of this Source.

        :return: The shared_secret of this Source.
        :rtype: str
        """
        ...
    @shared_secret.setter
    def shared_secret(self, shared_secret) -> None:
        """
        Get the shared_secret of this Source.

        :return: The shared_secret of this Source.
        :rtype: str
        """
        ...
    @property
    def meta_url(self):
        """
        Get the meta_url of this Source.

        :return: The meta_url of this Source.
        :rtype: str
        """
        ...
    @meta_url.setter
    def meta_url(self, meta_url) -> None:
        """
        Get the meta_url of this Source.

        :return: The meta_url of this Source.
        :rtype: str
        """
        ...
    @property
    def default_rp(self):
        """
        Get the default_rp of this Source.

        :return: The default_rp of this Source.
        :rtype: str
        """
        ...
    @default_rp.setter
    def default_rp(self, default_rp) -> None:
        """
        Get the default_rp of this Source.

        :return: The default_rp of this Source.
        :rtype: str
        """
        ...
    @property
    def languages(self):
        """
        Get the languages of this Source.

        :return: The languages of this Source.
        :rtype: list[str]
        """
        ...
    @languages.setter
    def languages(self, languages) -> None:
        """
        Get the languages of this Source.

        :return: The languages of this Source.
        :rtype: list[str]
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
