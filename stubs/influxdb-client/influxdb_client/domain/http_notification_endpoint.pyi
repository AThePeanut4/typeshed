"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.domain.notification_endpoint_discriminator import NotificationEndpointDiscriminator

class HTTPNotificationEndpoint(NotificationEndpointDiscriminator):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        url: Incomplete | None = None,
        username: Incomplete | None = None,
        password: Incomplete | None = None,
        token: Incomplete | None = None,
        method: Incomplete | None = None,
        auth_method: Incomplete | None = None,
        content_template: Incomplete | None = None,
        headers: Incomplete | None = None,
        id: Incomplete | None = None,
        org_id: Incomplete | None = None,
        user_id: Incomplete | None = None,
        created_at: Incomplete | None = None,
        updated_at: Incomplete | None = None,
        description: Incomplete | None = None,
        name: Incomplete | None = None,
        status: str = "active",
        labels: Incomplete | None = None,
        links: Incomplete | None = None,
        type: str = "http",
    ) -> None:
        """HTTPNotificationEndpoint - a model defined in OpenAPI."""
        ...
    @property
    def url(self):
        """
        Get the url of this HTTPNotificationEndpoint.

        :return: The url of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @url.setter
    def url(self, url) -> None:
        """
        Get the url of this HTTPNotificationEndpoint.

        :return: The url of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @property
    def username(self):
        """
        Get the username of this HTTPNotificationEndpoint.

        :return: The username of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @username.setter
    def username(self, username) -> None:
        """
        Get the username of this HTTPNotificationEndpoint.

        :return: The username of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @property
    def password(self):
        """
        Get the password of this HTTPNotificationEndpoint.

        :return: The password of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @password.setter
    def password(self, password) -> None:
        """
        Get the password of this HTTPNotificationEndpoint.

        :return: The password of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @property
    def token(self):
        """
        Get the token of this HTTPNotificationEndpoint.

        :return: The token of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @token.setter
    def token(self, token) -> None:
        """
        Get the token of this HTTPNotificationEndpoint.

        :return: The token of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @property
    def method(self):
        """
        Get the method of this HTTPNotificationEndpoint.

        :return: The method of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @method.setter
    def method(self, method) -> None:
        """
        Get the method of this HTTPNotificationEndpoint.

        :return: The method of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @property
    def auth_method(self):
        """
        Get the auth_method of this HTTPNotificationEndpoint.

        :return: The auth_method of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @auth_method.setter
    def auth_method(self, auth_method) -> None:
        """
        Get the auth_method of this HTTPNotificationEndpoint.

        :return: The auth_method of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @property
    def content_template(self):
        """
        Get the content_template of this HTTPNotificationEndpoint.

        :return: The content_template of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @content_template.setter
    def content_template(self, content_template) -> None:
        """
        Get the content_template of this HTTPNotificationEndpoint.

        :return: The content_template of this HTTPNotificationEndpoint.
        :rtype: str
        """
        ...
    @property
    def headers(self):
        """
        Get the headers of this HTTPNotificationEndpoint.

        Customized headers.

        :return: The headers of this HTTPNotificationEndpoint.
        :rtype: dict(str, str)
        """
        ...
    @headers.setter
    def headers(self, headers) -> None:
        """
        Get the headers of this HTTPNotificationEndpoint.

        Customized headers.

        :return: The headers of this HTTPNotificationEndpoint.
        :rtype: dict(str, str)
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
