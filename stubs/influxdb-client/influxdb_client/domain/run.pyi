"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class Run:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        id: Incomplete | None = None,
        task_id: Incomplete | None = None,
        status: Incomplete | None = None,
        scheduled_for: Incomplete | None = None,
        log: Incomplete | None = None,
        flux: str | None = None,
        started_at: Incomplete | None = None,
        finished_at: Incomplete | None = None,
        requested_at: Incomplete | None = None,
        links: Incomplete | None = None,
    ) -> None:
        """Run - a model defined in OpenAPI."""
        ...
    @property
    def id(self):
        """
        Get the id of this Run.

        :return: The id of this Run.
        :rtype: str
        """
        ...
    @id.setter
    def id(self, id) -> None:
        """
        Get the id of this Run.

        :return: The id of this Run.
        :rtype: str
        """
        ...
    @property
    def task_id(self):
        """
        Get the task_id of this Run.

        :return: The task_id of this Run.
        :rtype: str
        """
        ...
    @task_id.setter
    def task_id(self, task_id) -> None:
        """
        Get the task_id of this Run.

        :return: The task_id of this Run.
        :rtype: str
        """
        ...
    @property
    def status(self):
        """
        Get the status of this Run.

        :return: The status of this Run.
        :rtype: str
        """
        ...
    @status.setter
    def status(self, status) -> None:
        """
        Get the status of this Run.

        :return: The status of this Run.
        :rtype: str
        """
        ...
    @property
    def scheduled_for(self):
        """
        Get the scheduled_for of this Run.

        The time [RFC3339 date/time format](https://docs.influxdata.com/influxdb/latest/reference/glossary/#rfc3339-timestamp) used for the run's `now` option.

        :return: The scheduled_for of this Run.
        :rtype: datetime
        """
        ...
    @scheduled_for.setter
    def scheduled_for(self, scheduled_for) -> None:
        """
        Get the scheduled_for of this Run.

        The time [RFC3339 date/time format](https://docs.influxdata.com/influxdb/latest/reference/glossary/#rfc3339-timestamp) used for the run's `now` option.

        :return: The scheduled_for of this Run.
        :rtype: datetime
        """
        ...
    @property
    def log(self):
        """
        Get the log of this Run.

        An array of logs associated with the run.

        :return: The log of this Run.
        :rtype: list[LogEvent]
        """
        ...
    @log.setter
    def log(self, log) -> None:
        """
        Get the log of this Run.

        An array of logs associated with the run.

        :return: The log of this Run.
        :rtype: list[LogEvent]
        """
        ...
    flux: str | None
    @property
    def started_at(self):
        """
        Get the started_at of this Run.

        The time ([RFC3339Nano date/time format](https://go.dev/src/time/format.go)) the run started executing.

        :return: The started_at of this Run.
        :rtype: datetime
        """
        ...
    @started_at.setter
    def started_at(self, started_at) -> None:
        """
        Get the started_at of this Run.

        The time ([RFC3339Nano date/time format](https://go.dev/src/time/format.go)) the run started executing.

        :return: The started_at of this Run.
        :rtype: datetime
        """
        ...
    @property
    def finished_at(self):
        """
        Get the finished_at of this Run.

        The time ([RFC3339Nano date/time format](https://go.dev/src/time/format.go)) the run finished executing.

        :return: The finished_at of this Run.
        :rtype: datetime
        """
        ...
    @finished_at.setter
    def finished_at(self, finished_at) -> None:
        """
        Get the finished_at of this Run.

        The time ([RFC3339Nano date/time format](https://go.dev/src/time/format.go)) the run finished executing.

        :return: The finished_at of this Run.
        :rtype: datetime
        """
        ...
    @property
    def requested_at(self):
        """
        Get the requested_at of this Run.

        The time ([RFC3339Nano date/time format](https://docs.influxdata.com/influxdb/latest/reference/glossary/#rfc3339nano-timestamp)) the run was manually requested.

        :return: The requested_at of this Run.
        :rtype: datetime
        """
        ...
    @requested_at.setter
    def requested_at(self, requested_at) -> None:
        """
        Get the requested_at of this Run.

        The time ([RFC3339Nano date/time format](https://docs.influxdata.com/influxdb/latest/reference/glossary/#rfc3339nano-timestamp)) the run was manually requested.

        :return: The requested_at of this Run.
        :rtype: datetime
        """
        ...
    @property
    def links(self):
        """
        Get the links of this Run.

        :return: The links of this Run.
        :rtype: RunLinks
        """
        ...
    @links.setter
    def links(self, links) -> None:
        """
        Get the links of this Run.

        :return: The links of this Run.
        :rtype: RunLinks
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
