"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class OrganizationLinks:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        _self: Incomplete | None = None,
        members: Incomplete | None = None,
        owners: Incomplete | None = None,
        labels: Incomplete | None = None,
        secrets: Incomplete | None = None,
        buckets: Incomplete | None = None,
        tasks: Incomplete | None = None,
        dashboards: Incomplete | None = None,
    ) -> None:
        """OrganizationLinks - a model defined in OpenAPI."""
        ...
    @property
    def members(self):
        """
        Get the members of this OrganizationLinks.

        URI of resource.

        :return: The members of this OrganizationLinks.
        :rtype: str
        """
        ...
    @members.setter
    def members(self, members) -> None:
        """
        Get the members of this OrganizationLinks.

        URI of resource.

        :return: The members of this OrganizationLinks.
        :rtype: str
        """
        ...
    @property
    def owners(self):
        """
        Get the owners of this OrganizationLinks.

        URI of resource.

        :return: The owners of this OrganizationLinks.
        :rtype: str
        """
        ...
    @owners.setter
    def owners(self, owners) -> None:
        """
        Get the owners of this OrganizationLinks.

        URI of resource.

        :return: The owners of this OrganizationLinks.
        :rtype: str
        """
        ...
    @property
    def labels(self):
        """
        Get the labels of this OrganizationLinks.

        URI of resource.

        :return: The labels of this OrganizationLinks.
        :rtype: str
        """
        ...
    @labels.setter
    def labels(self, labels) -> None:
        """
        Get the labels of this OrganizationLinks.

        URI of resource.

        :return: The labels of this OrganizationLinks.
        :rtype: str
        """
        ...
    @property
    def secrets(self):
        """
        Get the secrets of this OrganizationLinks.

        URI of resource.

        :return: The secrets of this OrganizationLinks.
        :rtype: str
        """
        ...
    @secrets.setter
    def secrets(self, secrets) -> None:
        """
        Get the secrets of this OrganizationLinks.

        URI of resource.

        :return: The secrets of this OrganizationLinks.
        :rtype: str
        """
        ...
    @property
    def buckets(self):
        """
        Get the buckets of this OrganizationLinks.

        URI of resource.

        :return: The buckets of this OrganizationLinks.
        :rtype: str
        """
        ...
    @buckets.setter
    def buckets(self, buckets) -> None:
        """
        Get the buckets of this OrganizationLinks.

        URI of resource.

        :return: The buckets of this OrganizationLinks.
        :rtype: str
        """
        ...
    @property
    def tasks(self):
        """
        Get the tasks of this OrganizationLinks.

        URI of resource.

        :return: The tasks of this OrganizationLinks.
        :rtype: str
        """
        ...
    @tasks.setter
    def tasks(self, tasks) -> None:
        """
        Get the tasks of this OrganizationLinks.

        URI of resource.

        :return: The tasks of this OrganizationLinks.
        :rtype: str
        """
        ...
    @property
    def dashboards(self):
        """
        Get the dashboards of this OrganizationLinks.

        URI of resource.

        :return: The dashboards of this OrganizationLinks.
        :rtype: str
        """
        ...
    @dashboards.setter
    def dashboards(self, dashboards) -> None:
        """
        Get the dashboards of this OrganizationLinks.

        URI of resource.

        :return: The dashboards of this OrganizationLinks.
        :rtype: str
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
