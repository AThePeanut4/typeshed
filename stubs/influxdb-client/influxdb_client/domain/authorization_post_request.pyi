"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.domain.authorization_update_request import AuthorizationUpdateRequest

class AuthorizationPostRequest(AuthorizationUpdateRequest):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        org_id: Incomplete | None = None,
        user_id: Incomplete | None = None,
        permissions: Incomplete | None = None,
        status: str = "active",
        description: Incomplete | None = None,
    ) -> None:
        """AuthorizationPostRequest - a model defined in OpenAPI."""
        ...
    @property
    def org_id(self):
        """
        Get the org_id of this AuthorizationPostRequest.

        An organization ID. Specifies the organization that owns the authorization.

        :return: The org_id of this AuthorizationPostRequest.
        :rtype: str
        """
        ...
    @org_id.setter
    def org_id(self, org_id) -> None:
        """
        Get the org_id of this AuthorizationPostRequest.

        An organization ID. Specifies the organization that owns the authorization.

        :return: The org_id of this AuthorizationPostRequest.
        :rtype: str
        """
        ...
    @property
    def user_id(self):
        """
        Get the user_id of this AuthorizationPostRequest.

        A user ID. Specifies the user that the authorization is scoped to.  When a user authenticates with username and password, InfluxDB generates a _user session_ with all the permissions specified by all the user's authorizations.

        :return: The user_id of this AuthorizationPostRequest.
        :rtype: str
        """
        ...
    @user_id.setter
    def user_id(self, user_id) -> None:
        """
        Get the user_id of this AuthorizationPostRequest.

        A user ID. Specifies the user that the authorization is scoped to.  When a user authenticates with username and password, InfluxDB generates a _user session_ with all the permissions specified by all the user's authorizations.

        :return: The user_id of this AuthorizationPostRequest.
        :rtype: str
        """
        ...
    @property
    def permissions(self):
        """
        Get the permissions of this AuthorizationPostRequest.

        A list of permissions for an authorization. In the list, provide at least one `permission` object.  In a `permission`, the `resource.type` property grants access to all resources of the specified type. To grant access to only a specific resource, specify the `resource.id` property.

        :return: The permissions of this AuthorizationPostRequest.
        :rtype: list[Permission]
        """
        ...
    @permissions.setter
    def permissions(self, permissions) -> None:
        """
        Get the permissions of this AuthorizationPostRequest.

        A list of permissions for an authorization. In the list, provide at least one `permission` object.  In a `permission`, the `resource.type` property grants access to all resources of the specified type. To grant access to only a specific resource, specify the `resource.id` property.

        :return: The permissions of this AuthorizationPostRequest.
        :rtype: list[Permission]
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
