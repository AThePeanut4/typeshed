"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class SubscriptionManifest:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self, name: Incomplete | None = None, mode: Incomplete | None = None, destinations: Incomplete | None = None
    ) -> None:
        """SubscriptionManifest - a model defined in OpenAPI."""
        ...
    @property
    def name(self):
        """
        Get the name of this SubscriptionManifest.

        :return: The name of this SubscriptionManifest.
        :rtype: str
        """
        ...
    @name.setter
    def name(self, name) -> None:
        """
        Get the name of this SubscriptionManifest.

        :return: The name of this SubscriptionManifest.
        :rtype: str
        """
        ...
    @property
    def mode(self):
        """
        Get the mode of this SubscriptionManifest.

        :return: The mode of this SubscriptionManifest.
        :rtype: str
        """
        ...
    @mode.setter
    def mode(self, mode) -> None:
        """
        Get the mode of this SubscriptionManifest.

        :return: The mode of this SubscriptionManifest.
        :rtype: str
        """
        ...
    @property
    def destinations(self):
        """
        Get the destinations of this SubscriptionManifest.

        :return: The destinations of this SubscriptionManifest.
        :rtype: list[str]
        """
        ...
    @destinations.setter
    def destinations(self, destinations) -> None:
        """
        Get the destinations of this SubscriptionManifest.

        :return: The destinations of this SubscriptionManifest.
        :rtype: list[str]
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
