"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.domain.check_discriminator import CheckDiscriminator

class ThresholdCheck(CheckDiscriminator):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        type: str = "threshold",
        thresholds: Incomplete | None = None,
        every: Incomplete | None = None,
        offset: Incomplete | None = None,
        tags: Incomplete | None = None,
        status_message_template: Incomplete | None = None,
        id: Incomplete | None = None,
        name: Incomplete | None = None,
        org_id: Incomplete | None = None,
        task_id: Incomplete | None = None,
        owner_id: Incomplete | None = None,
        created_at: Incomplete | None = None,
        updated_at: Incomplete | None = None,
        query: Incomplete | None = None,
        status: Incomplete | None = None,
        description: Incomplete | None = None,
        latest_completed: Incomplete | None = None,
        last_run_status: Incomplete | None = None,
        last_run_error: Incomplete | None = None,
        labels: Incomplete | None = None,
        links: Incomplete | None = None,
    ) -> None:
        """ThresholdCheck - a model defined in OpenAPI."""
        ...
    @property
    def type(self):
        """
        Get the type of this ThresholdCheck.

        :return: The type of this ThresholdCheck.
        :rtype: str
        """
        ...
    @type.setter
    def type(self, type) -> None:
        """
        Get the type of this ThresholdCheck.

        :return: The type of this ThresholdCheck.
        :rtype: str
        """
        ...
    @property
    def thresholds(self):
        """
        Get the thresholds of this ThresholdCheck.

        :return: The thresholds of this ThresholdCheck.
        :rtype: list[Threshold]
        """
        ...
    @thresholds.setter
    def thresholds(self, thresholds) -> None:
        """
        Get the thresholds of this ThresholdCheck.

        :return: The thresholds of this ThresholdCheck.
        :rtype: list[Threshold]
        """
        ...
    @property
    def every(self):
        """
        Get the every of this ThresholdCheck.

        Check repetition interval.

        :return: The every of this ThresholdCheck.
        :rtype: str
        """
        ...
    @every.setter
    def every(self, every) -> None:
        """
        Get the every of this ThresholdCheck.

        Check repetition interval.

        :return: The every of this ThresholdCheck.
        :rtype: str
        """
        ...
    @property
    def offset(self):
        """
        Get the offset of this ThresholdCheck.

        Duration to delay after the schedule, before executing check.

        :return: The offset of this ThresholdCheck.
        :rtype: str
        """
        ...
    @offset.setter
    def offset(self, offset) -> None:
        """
        Get the offset of this ThresholdCheck.

        Duration to delay after the schedule, before executing check.

        :return: The offset of this ThresholdCheck.
        :rtype: str
        """
        ...
    @property
    def tags(self):
        """
        Get the tags of this ThresholdCheck.

        List of tags to write to each status.

        :return: The tags of this ThresholdCheck.
        :rtype: list[object]
        """
        ...
    @tags.setter
    def tags(self, tags) -> None:
        """
        Get the tags of this ThresholdCheck.

        List of tags to write to each status.

        :return: The tags of this ThresholdCheck.
        :rtype: list[object]
        """
        ...
    @property
    def status_message_template(self):
        """
        Get the status_message_template of this ThresholdCheck.

        The template used to generate and write a status message.

        :return: The status_message_template of this ThresholdCheck.
        :rtype: str
        """
        ...
    @status_message_template.setter
    def status_message_template(self, status_message_template) -> None:
        """
        Get the status_message_template of this ThresholdCheck.

        The template used to generate and write a status message.

        :return: The status_message_template of this ThresholdCheck.
        :rtype: str
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
