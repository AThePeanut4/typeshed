"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

class Field:
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    openapi_types: Incomplete
    attribute_map: Incomplete
    discriminator: Incomplete
    def __init__(
        self,
        value: Incomplete | None = None,
        type: Incomplete | None = None,
        alias: Incomplete | None = None,
        args: Incomplete | None = None,
    ) -> None:
        """Field - a model defined in OpenAPI."""
        ...
    @property
    def value(self):
        """
        Get the value of this Field.

        value is the value of the field.  Meaning of the value is implied by the `type` key

        :return: The value of this Field.
        :rtype: str
        """
        ...
    @value.setter
    def value(self, value) -> None:
        """
        Get the value of this Field.

        value is the value of the field.  Meaning of the value is implied by the `type` key

        :return: The value of this Field.
        :rtype: str
        """
        ...
    @property
    def type(self):
        """
        Get the type of this Field.

        `type` describes the field type. `func` is a function. `field` is a field reference.

        :return: The type of this Field.
        :rtype: str
        """
        ...
    @type.setter
    def type(self, type) -> None:
        """
        Get the type of this Field.

        `type` describes the field type. `func` is a function. `field` is a field reference.

        :return: The type of this Field.
        :rtype: str
        """
        ...
    @property
    def alias(self):
        """
        Get the alias of this Field.

        Alias overrides the field name in the returned response.  Applies only if type is `func`

        :return: The alias of this Field.
        :rtype: str
        """
        ...
    @alias.setter
    def alias(self, alias) -> None:
        """
        Get the alias of this Field.

        Alias overrides the field name in the returned response.  Applies only if type is `func`

        :return: The alias of this Field.
        :rtype: str
        """
        ...
    @property
    def args(self):
        """
        Get the args of this Field.

        Args are the arguments to the function

        :return: The args of this Field.
        :rtype: list[Field]
        """
        ...
    @args.setter
    def args(self, args) -> None:
        """
        Get the args of this Field.

        Args are the arguments to the function

        :return: The args of this Field.
        :rtype: list[Field]
        """
        ...
    def to_dict(self):
        """Return the model properties as a dict."""
        ...
    def to_str(self):
        """Return the string representation of the model."""
        ...
    def __eq__(self, other):
        """Return true if both objects are equal."""
        ...
    def __ne__(self, other):
        """Return true if both objects are not equal."""
        ...
