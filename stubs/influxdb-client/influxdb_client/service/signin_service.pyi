"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.service._base_service import _BaseService

class SigninService(_BaseService):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    def __init__(self, api_client: Incomplete | None = None) -> None:
        """SigninService - a operation defined in OpenAPI."""
        ...
    def post_signin(self, **kwargs):
        """
        Create a user session..

        Authenticates [Basic authentication credentials](#section/Authentication/BasicAuthentication) for a [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user), and then, if successful, generates a user session.  To authenticate a user, pass the HTTP `Authorization` header with the `Basic` scheme and the base64-encoded username and password. For syntax and more information, see [Basic Authentication](#section/Authentication/BasicAuthentication) for syntax and more information.  If authentication is successful, InfluxDB creates a new session for the user and then returns the session cookie in the `Set-Cookie` response header.  InfluxDB stores user sessions in memory only. They expire within ten minutes and during restarts of the InfluxDB instance.  #### User sessions with authorizations  - In InfluxDB Cloud, a user session inherits all the user's permissions for   the organization. - In InfluxDB OSS, a user session inherits all the user's permissions for all   the organizations that the user belongs to.  #### Related endpoints  - [Signout](#tag/Signout)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.post_signin(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str authorization: An auth credential for the Basic scheme
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def post_signin_with_http_info(self, **kwargs):
        """
        Create a user session..

        Authenticates [Basic authentication credentials](#section/Authentication/BasicAuthentication) for a [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user), and then, if successful, generates a user session.  To authenticate a user, pass the HTTP `Authorization` header with the `Basic` scheme and the base64-encoded username and password. For syntax and more information, see [Basic Authentication](#section/Authentication/BasicAuthentication) for syntax and more information.  If authentication is successful, InfluxDB creates a new session for the user and then returns the session cookie in the `Set-Cookie` response header.  InfluxDB stores user sessions in memory only. They expire within ten minutes and during restarts of the InfluxDB instance.  #### User sessions with authorizations  - In InfluxDB Cloud, a user session inherits all the user's permissions for   the organization. - In InfluxDB OSS, a user session inherits all the user's permissions for all   the organizations that the user belongs to.  #### Related endpoints  - [Signout](#tag/Signout)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.post_signin_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str authorization: An auth credential for the Basic scheme
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def post_signin_async(self, **kwargs):
        """
        Create a user session..

        Authenticates [Basic authentication credentials](#section/Authentication/BasicAuthentication) for a [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user), and then, if successful, generates a user session.  To authenticate a user, pass the HTTP `Authorization` header with the `Basic` scheme and the base64-encoded username and password. For syntax and more information, see [Basic Authentication](#section/Authentication/BasicAuthentication) for syntax and more information.  If authentication is successful, InfluxDB creates a new session for the user and then returns the session cookie in the `Set-Cookie` response header.  InfluxDB stores user sessions in memory only. They expire within ten minutes and during restarts of the InfluxDB instance.  #### User sessions with authorizations  - In InfluxDB Cloud, a user session inherits all the user's permissions for   the organization. - In InfluxDB OSS, a user session inherits all the user's permissions for all   the organizations that the user belongs to.  #### Related endpoints  - [Signout](#tag/Signout)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str authorization: An auth credential for the Basic scheme
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
