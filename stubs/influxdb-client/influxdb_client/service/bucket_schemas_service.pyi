"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.service._base_service import _BaseService

class BucketSchemasService(_BaseService):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    def __init__(self, api_client: Incomplete | None = None) -> None:
        """BucketSchemasService - a operation defined in OpenAPI."""
        ...
    def create_measurement_schema(self, bucket_id, measurement_schema_create_request, **kwargs):
        """
        Create a measurement schema for a bucket.

        Creates an _explict_ measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema) for a bucket.  _Explicit_ schemas are used to enforce column names, tags, fields, and data types for your data.  By default, buckets have an _implicit_ schema-type (`"schemaType": "implicit"`) that conforms to your data.  Use this endpoint to create schemas that prevent non-conforming write requests.  #### Limitations  - Buckets must be created with the "explict" `schemaType` in order to use schemas.  #### Related guides  - [Manage bucket schemas](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/bucket-schema/). - [Create a bucket with an explicit schema](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/create-bucket/#create-a-bucket-with-an-explicit-schema)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.create_measurement_schema(bucket_id, measurement_schema_create_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Adds a schema for the specified bucket. (required)
        :param MeasurementSchemaCreateRequest measurement_schema_create_request: (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def create_measurement_schema_with_http_info(self, bucket_id, measurement_schema_create_request, **kwargs):
        """
        Create a measurement schema for a bucket.

        Creates an _explict_ measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema) for a bucket.  _Explicit_ schemas are used to enforce column names, tags, fields, and data types for your data.  By default, buckets have an _implicit_ schema-type (`"schemaType": "implicit"`) that conforms to your data.  Use this endpoint to create schemas that prevent non-conforming write requests.  #### Limitations  - Buckets must be created with the "explict" `schemaType` in order to use schemas.  #### Related guides  - [Manage bucket schemas](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/bucket-schema/). - [Create a bucket with an explicit schema](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/create-bucket/#create-a-bucket-with-an-explicit-schema)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.create_measurement_schema_with_http_info(bucket_id, measurement_schema_create_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Adds a schema for the specified bucket. (required)
        :param MeasurementSchemaCreateRequest measurement_schema_create_request: (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def create_measurement_schema_async(self, bucket_id, measurement_schema_create_request, **kwargs):
        """
        Create a measurement schema for a bucket.

        Creates an _explict_ measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema) for a bucket.  _Explicit_ schemas are used to enforce column names, tags, fields, and data types for your data.  By default, buckets have an _implicit_ schema-type (`"schemaType": "implicit"`) that conforms to your data.  Use this endpoint to create schemas that prevent non-conforming write requests.  #### Limitations  - Buckets must be created with the "explict" `schemaType` in order to use schemas.  #### Related guides  - [Manage bucket schemas](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/bucket-schema/). - [Create a bucket with an explicit schema](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/create-bucket/#create-a-bucket-with-an-explicit-schema)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str bucket_id: A bucket ID. Adds a schema for the specified bucket. (required)
        :param MeasurementSchemaCreateRequest measurement_schema_create_request: (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_measurement_schema(self, bucket_id, measurement_id, **kwargs):
        """
        Retrieve a measurement schema.

        Retrieves an explicit measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema).
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_measurement_schema(bucket_id, measurement_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Retrieves schemas for the specified bucket. (required)
        :param str measurement_id: The measurement schema ID. Specifies the measurement schema to retrieve. (required)
        :param str org: Organization name. Specifies the organization that owns the schema.
        :param str org_id: Organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_measurement_schema_with_http_info(self, bucket_id, measurement_id, **kwargs):
        """
        Retrieve a measurement schema.

        Retrieves an explicit measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema).
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_measurement_schema_with_http_info(bucket_id, measurement_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Retrieves schemas for the specified bucket. (required)
        :param str measurement_id: The measurement schema ID. Specifies the measurement schema to retrieve. (required)
        :param str org: Organization name. Specifies the organization that owns the schema.
        :param str org_id: Organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_measurement_schema_async(self, bucket_id, measurement_id, **kwargs):
        """
        Retrieve a measurement schema.

        Retrieves an explicit measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema).
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str bucket_id: A bucket ID. Retrieves schemas for the specified bucket. (required)
        :param str measurement_id: The measurement schema ID. Specifies the measurement schema to retrieve. (required)
        :param str org: Organization name. Specifies the organization that owns the schema.
        :param str org_id: Organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_measurement_schemas(self, bucket_id, **kwargs):
        """
        List measurement schemas of a bucket.

        Lists _explicit_ [schemas](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema) (`"schemaType": "explicit"`) for a bucket.  _Explicit_ schemas are used to enforce column names, tags, fields, and data types for your data.  By default, buckets have an _implicit_ schema-type (`"schemaType": "implicit"`) that conforms to your data.  #### Related guides  - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_measurement_schemas(bucket_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Lists measurement schemas for the specified bucket. (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :param str name: A measurement name. Only returns measurement schemas with the specified name.
        :return: MeasurementSchemaList
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_measurement_schemas_with_http_info(self, bucket_id, **kwargs):
        """
        List measurement schemas of a bucket.

        Lists _explicit_ [schemas](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema) (`"schemaType": "explicit"`) for a bucket.  _Explicit_ schemas are used to enforce column names, tags, fields, and data types for your data.  By default, buckets have an _implicit_ schema-type (`"schemaType": "implicit"`) that conforms to your data.  #### Related guides  - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_measurement_schemas_with_http_info(bucket_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Lists measurement schemas for the specified bucket. (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :param str name: A measurement name. Only returns measurement schemas with the specified name.
        :return: MeasurementSchemaList
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_measurement_schemas_async(self, bucket_id, **kwargs):
        """
        List measurement schemas of a bucket.

        Lists _explicit_ [schemas](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema) (`"schemaType": "explicit"`) for a bucket.  _Explicit_ schemas are used to enforce column names, tags, fields, and data types for your data.  By default, buckets have an _implicit_ schema-type (`"schemaType": "implicit"`) that conforms to your data.  #### Related guides  - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str bucket_id: A bucket ID. Lists measurement schemas for the specified bucket. (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :param str name: A measurement name. Only returns measurement schemas with the specified name.
        :return: MeasurementSchemaList
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def update_measurement_schema(self, bucket_id, measurement_id, measurement_schema_update_request, **kwargs):
        """
        Update a measurement schema.

        Updates a measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema).  Use this endpoint to update the fields (`name`, `type`, and `dataType`) of a measurement schema.  #### Limitations  - You can't update the `name` of a measurement.  #### Related guides  - [Manage bucket schemas](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/bucket-schema/). - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/).
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.update_measurement_schema(bucket_id, measurement_id, measurement_schema_update_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Specifies the bucket to retrieve schemas for. (required)
        :param str measurement_id: A measurement schema ID. Retrieves the specified measurement schema. (required)
        :param MeasurementSchemaUpdateRequest measurement_schema_update_request: (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def update_measurement_schema_with_http_info(
        self, bucket_id, measurement_id, measurement_schema_update_request, **kwargs
    ):
        """
        Update a measurement schema.

        Updates a measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema).  Use this endpoint to update the fields (`name`, `type`, and `dataType`) of a measurement schema.  #### Limitations  - You can't update the `name` of a measurement.  #### Related guides  - [Manage bucket schemas](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/bucket-schema/). - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/).
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.update_measurement_schema_with_http_info(bucket_id, measurement_id, measurement_schema_update_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str bucket_id: A bucket ID. Specifies the bucket to retrieve schemas for. (required)
        :param str measurement_id: A measurement schema ID. Retrieves the specified measurement schema. (required)
        :param MeasurementSchemaUpdateRequest measurement_schema_update_request: (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def update_measurement_schema_async(self, bucket_id, measurement_id, measurement_schema_update_request, **kwargs):
        """
        Update a measurement schema.

        Updates a measurement [schema](https://docs.influxdata.com/influxdb/cloud/reference/glossary/#schema).  Use this endpoint to update the fields (`name`, `type`, and `dataType`) of a measurement schema.  #### Limitations  - You can't update the `name` of a measurement.  #### Related guides  - [Manage bucket schemas](https://docs.influxdata.com/influxdb/cloud/organizations/buckets/bucket-schema/). - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/).
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str bucket_id: A bucket ID. Specifies the bucket to retrieve schemas for. (required)
        :param str measurement_id: A measurement schema ID. Retrieves the specified measurement schema. (required)
        :param MeasurementSchemaUpdateRequest measurement_schema_update_request: (required)
        :param str org: An organization name. Specifies the organization that owns the schema.
        :param str org_id: An organization ID. Specifies the organization that owns the schema.
        :return: MeasurementSchema
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
