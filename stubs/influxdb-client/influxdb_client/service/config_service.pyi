"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.service._base_service import _BaseService

class ConfigService(_BaseService):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    def __init__(self, api_client: Incomplete | None = None) -> None:
        """ConfigService - a operation defined in OpenAPI."""
        ...
    def get_config(self, **kwargs):
        """
        Retrieve runtime configuration.

        Returns the active runtime configuration of the InfluxDB instance.  In InfluxDB v2.2+, use this endpoint to view your active runtime configuration, including flags and environment variables.  #### Related guides  - [View your runtime server configuration](https://docs.influxdata.com/influxdb/latest/reference/config-options/#view-your-runtime-server-configuration)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_config(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :return: Config
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_config_with_http_info(self, **kwargs):
        """
        Retrieve runtime configuration.

        Returns the active runtime configuration of the InfluxDB instance.  In InfluxDB v2.2+, use this endpoint to view your active runtime configuration, including flags and environment variables.  #### Related guides  - [View your runtime server configuration](https://docs.influxdata.com/influxdb/latest/reference/config-options/#view-your-runtime-server-configuration)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_config_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :return: Config
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_config_async(self, **kwargs):
        """
        Retrieve runtime configuration.

        Returns the active runtime configuration of the InfluxDB instance.  In InfluxDB v2.2+, use this endpoint to view your active runtime configuration, including flags and environment variables.  #### Related guides  - [View your runtime server configuration](https://docs.influxdata.com/influxdb/latest/reference/config-options/#view-your-runtime-server-configuration)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :return: Config
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_flags(self, **kwargs):
        """
        Retrieve feature flags.

        Retrieves the feature flag key-value pairs configured for the InfluxDB instance. _Feature flags_ are configuration options used to develop and test experimental InfluxDB features and are intended for internal use only.  This endpoint represents the first step in the following three-step process to configure feature flags:  1. Use [token authentication](#section/Authentication/TokenAuthentication) or a [user session](#tag/Signin) with this endpoint to retrieve    feature flags and their values. 2. Follow the instructions to [enable, disable, or override values for feature flags](https://docs.influxdata.com/influxdb/latest/reference/config-options/#feature-flags). 3. **Optional**: To confirm that your change is applied, do one of the following:     - Send a request to this endpoint to retrieve the current feature flag values.    - Send a request to the [`GET /api/v2/config` endpoint](#operation/GetConfig) to retrieve the      current runtime server configuration.  #### Related guides  - [InfluxDB configuration options](https://docs.influxdata.com/influxdb/latest/reference/config-options/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_flags(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :return: dict(str, object)
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_flags_with_http_info(self, **kwargs):
        """
        Retrieve feature flags.

        Retrieves the feature flag key-value pairs configured for the InfluxDB instance. _Feature flags_ are configuration options used to develop and test experimental InfluxDB features and are intended for internal use only.  This endpoint represents the first step in the following three-step process to configure feature flags:  1. Use [token authentication](#section/Authentication/TokenAuthentication) or a [user session](#tag/Signin) with this endpoint to retrieve    feature flags and their values. 2. Follow the instructions to [enable, disable, or override values for feature flags](https://docs.influxdata.com/influxdb/latest/reference/config-options/#feature-flags). 3. **Optional**: To confirm that your change is applied, do one of the following:     - Send a request to this endpoint to retrieve the current feature flag values.    - Send a request to the [`GET /api/v2/config` endpoint](#operation/GetConfig) to retrieve the      current runtime server configuration.  #### Related guides  - [InfluxDB configuration options](https://docs.influxdata.com/influxdb/latest/reference/config-options/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_flags_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :return: dict(str, object)
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_flags_async(self, **kwargs):
        """
        Retrieve feature flags.

        Retrieves the feature flag key-value pairs configured for the InfluxDB instance. _Feature flags_ are configuration options used to develop and test experimental InfluxDB features and are intended for internal use only.  This endpoint represents the first step in the following three-step process to configure feature flags:  1. Use [token authentication](#section/Authentication/TokenAuthentication) or a [user session](#tag/Signin) with this endpoint to retrieve    feature flags and their values. 2. Follow the instructions to [enable, disable, or override values for feature flags](https://docs.influxdata.com/influxdb/latest/reference/config-options/#feature-flags). 3. **Optional**: To confirm that your change is applied, do one of the following:     - Send a request to this endpoint to retrieve the current feature flag values.    - Send a request to the [`GET /api/v2/config` endpoint](#operation/GetConfig) to retrieve the      current runtime server configuration.  #### Related guides  - [InfluxDB configuration options](https://docs.influxdata.com/influxdb/latest/reference/config-options/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :return: dict(str, object)
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
