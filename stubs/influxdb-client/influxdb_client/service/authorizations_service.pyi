"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.service._base_service import _BaseService

class AuthorizationsService(_BaseService):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    def __init__(self, api_client: Incomplete | None = None) -> None:
        """AuthorizationsService - a operation defined in OpenAPI."""
        ...
    def delete_authorizations_id(self, auth_id, **kwargs):
        """
        Delete an authorization.

        Deletes an authorization.  Use the endpoint to delete an API token.  If you want to disable an API token instead of delete it, [update the authorization's status to `inactive`](#operation/PatchAuthorizationsID).
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.delete_authorizations_id(auth_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to delete. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def delete_authorizations_id_with_http_info(self, auth_id, **kwargs):
        """
        Delete an authorization.

        Deletes an authorization.  Use the endpoint to delete an API token.  If you want to disable an API token instead of delete it, [update the authorization's status to `inactive`](#operation/PatchAuthorizationsID).
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.delete_authorizations_id_with_http_info(auth_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to delete. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def delete_authorizations_id_async(self, auth_id, **kwargs):
        """
        Delete an authorization.

        Deletes an authorization.  Use the endpoint to delete an API token.  If you want to disable an API token instead of delete it, [update the authorization's status to `inactive`](#operation/PatchAuthorizationsID).
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to delete. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_authorizations(self, **kwargs):
        """
        List authorizations.

        Lists authorizations.  To limit which authorizations are returned, pass query parameters in your request. If no query parameters are passed, InfluxDB returns all authorizations.  #### InfluxDB Cloud  - InfluxDB Cloud doesn't expose [API token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token)   values in `GET /api/v2/authorizations` responses;   returns `token: redacted` for all authorizations.  #### Required permissions  To retrieve an authorization, the request must use an API token that has the following permissions:  - `read-authorizations` - `read-user` for the user that the authorization is scoped to  #### Related guides  - [View tokens](https://docs.influxdata.com/influxdb/latest/security/tokens/view-tokens/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_authorizations(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str user_id: A user ID. Only returns authorizations scoped to the specified [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user).
        :param str user: A user name. Only returns authorizations scoped to the specified [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user).
        :param str org_id: An organization ID. Only returns authorizations that belong to the specified [organization](https://docs.influxdata.com/influxdb/latest/reference/glossary/#organization).
        :param str org: An organization name. Only returns authorizations that belong to the specified [organization](https://docs.influxdata.com/influxdb/latest/reference/glossary/#organization).
        :param str token: An API [token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token) value. Specifies an authorization by its `token` property value and returns the authorization.  #### InfluxDB OSS  - Doesn't support this parameter. InfluxDB OSS ignores the `token=` parameter,   applies other parameters, and then returns the result.  #### Limitations  - The parameter is non-repeatable. If you specify more than one,   only the first one is used. If a resource with the specified   property value doesn't exist, then the response body contains an empty list.
        :return: Authorizations
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_authorizations_with_http_info(self, **kwargs):
        """
        List authorizations.

        Lists authorizations.  To limit which authorizations are returned, pass query parameters in your request. If no query parameters are passed, InfluxDB returns all authorizations.  #### InfluxDB Cloud  - InfluxDB Cloud doesn't expose [API token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token)   values in `GET /api/v2/authorizations` responses;   returns `token: redacted` for all authorizations.  #### Required permissions  To retrieve an authorization, the request must use an API token that has the following permissions:  - `read-authorizations` - `read-user` for the user that the authorization is scoped to  #### Related guides  - [View tokens](https://docs.influxdata.com/influxdb/latest/security/tokens/view-tokens/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_authorizations_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str user_id: A user ID. Only returns authorizations scoped to the specified [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user).
        :param str user: A user name. Only returns authorizations scoped to the specified [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user).
        :param str org_id: An organization ID. Only returns authorizations that belong to the specified [organization](https://docs.influxdata.com/influxdb/latest/reference/glossary/#organization).
        :param str org: An organization name. Only returns authorizations that belong to the specified [organization](https://docs.influxdata.com/influxdb/latest/reference/glossary/#organization).
        :param str token: An API [token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token) value. Specifies an authorization by its `token` property value and returns the authorization.  #### InfluxDB OSS  - Doesn't support this parameter. InfluxDB OSS ignores the `token=` parameter,   applies other parameters, and then returns the result.  #### Limitations  - The parameter is non-repeatable. If you specify more than one,   only the first one is used. If a resource with the specified   property value doesn't exist, then the response body contains an empty list.
        :return: Authorizations
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_authorizations_async(self, **kwargs):
        """
        List authorizations.

        Lists authorizations.  To limit which authorizations are returned, pass query parameters in your request. If no query parameters are passed, InfluxDB returns all authorizations.  #### InfluxDB Cloud  - InfluxDB Cloud doesn't expose [API token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token)   values in `GET /api/v2/authorizations` responses;   returns `token: redacted` for all authorizations.  #### Required permissions  To retrieve an authorization, the request must use an API token that has the following permissions:  - `read-authorizations` - `read-user` for the user that the authorization is scoped to  #### Related guides  - [View tokens](https://docs.influxdata.com/influxdb/latest/security/tokens/view-tokens/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str user_id: A user ID. Only returns authorizations scoped to the specified [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user).
        :param str user: A user name. Only returns authorizations scoped to the specified [user](https://docs.influxdata.com/influxdb/latest/reference/glossary/#user).
        :param str org_id: An organization ID. Only returns authorizations that belong to the specified [organization](https://docs.influxdata.com/influxdb/latest/reference/glossary/#organization).
        :param str org: An organization name. Only returns authorizations that belong to the specified [organization](https://docs.influxdata.com/influxdb/latest/reference/glossary/#organization).
        :param str token: An API [token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token) value. Specifies an authorization by its `token` property value and returns the authorization.  #### InfluxDB OSS  - Doesn't support this parameter. InfluxDB OSS ignores the `token=` parameter,   applies other parameters, and then returns the result.  #### Limitations  - The parameter is non-repeatable. If you specify more than one,   only the first one is used. If a resource with the specified   property value doesn't exist, then the response body contains an empty list.
        :return: Authorizations
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_authorizations_id(self, auth_id, **kwargs):
        """
        Retrieve an authorization.

        Retrieves an authorization.  Use this endpoint to retrieve information about an API token, including the token's permissions and the user that the token is scoped to.  #### InfluxDB OSS  - InfluxDB OSS returns   [API token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token) values in authorizations. - If the request uses an _[operator token](https://docs.influxdata.com/influxdb/latest/security/tokens/#operator-token)_,   InfluxDB OSS returns authorizations for all organizations in the instance.  #### Related guides  - [View tokens](https://docs.influxdata.com/influxdb/latest/security/tokens/view-tokens/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_authorizations_id(auth_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to retrieve. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_authorizations_id_with_http_info(self, auth_id, **kwargs):
        """
        Retrieve an authorization.

        Retrieves an authorization.  Use this endpoint to retrieve information about an API token, including the token's permissions and the user that the token is scoped to.  #### InfluxDB OSS  - InfluxDB OSS returns   [API token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token) values in authorizations. - If the request uses an _[operator token](https://docs.influxdata.com/influxdb/latest/security/tokens/#operator-token)_,   InfluxDB OSS returns authorizations for all organizations in the instance.  #### Related guides  - [View tokens](https://docs.influxdata.com/influxdb/latest/security/tokens/view-tokens/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_authorizations_id_with_http_info(auth_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to retrieve. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_authorizations_id_async(self, auth_id, **kwargs):
        """
        Retrieve an authorization.

        Retrieves an authorization.  Use this endpoint to retrieve information about an API token, including the token's permissions and the user that the token is scoped to.  #### InfluxDB OSS  - InfluxDB OSS returns   [API token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token) values in authorizations. - If the request uses an _[operator token](https://docs.influxdata.com/influxdb/latest/security/tokens/#operator-token)_,   InfluxDB OSS returns authorizations for all organizations in the instance.  #### Related guides  - [View tokens](https://docs.influxdata.com/influxdb/latest/security/tokens/view-tokens/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to retrieve. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def patch_authorizations_id(self, auth_id, authorization_update_request, **kwargs):
        """
        Update an API token to be active or inactive.

        Updates an authorization.  Use this endpoint to set an API token's status to be _active_ or _inactive_. InfluxDB rejects requests that use inactive API tokens.
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.patch_authorizations_id(auth_id, authorization_update_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to update. (required)
        :param AuthorizationUpdateRequest authorization_update_request: In the request body, provide the authorization properties to update. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def patch_authorizations_id_with_http_info(self, auth_id, authorization_update_request, **kwargs):
        """
        Update an API token to be active or inactive.

        Updates an authorization.  Use this endpoint to set an API token's status to be _active_ or _inactive_. InfluxDB rejects requests that use inactive API tokens.
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.patch_authorizations_id_with_http_info(auth_id, authorization_update_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to update. (required)
        :param AuthorizationUpdateRequest authorization_update_request: In the request body, provide the authorization properties to update. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def patch_authorizations_id_async(self, auth_id, authorization_update_request, **kwargs):
        """
        Update an API token to be active or inactive.

        Updates an authorization.  Use this endpoint to set an API token's status to be _active_ or _inactive_. InfluxDB rejects requests that use inactive API tokens.
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str auth_id: An authorization ID. Specifies the authorization to update. (required)
        :param AuthorizationUpdateRequest authorization_update_request: In the request body, provide the authorization properties to update. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def post_authorizations(self, authorization_post_request, **kwargs):
        """
        Create an authorization.

        Creates an authorization and returns the authorization with the generated API [token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token).  Use this endpoint to create an authorization, which generates an API token with permissions to `read` or `write` to a specific resource or `type` of resource. The API token is the authorization's `token` property value.  To follow best practices for secure API token generation and retrieval, InfluxDB enforces access restrictions on API tokens.    - InfluxDB allows access to the API token value immediately after the authorization is created.   - You can’t change access (read/write) permissions for an API token after it’s created.   - Tokens stop working when the user who created the token is deleted.  We recommend the following for managing your tokens:    - Create a generic user to create and manage tokens for writing data.   - Store your tokens in a secure password vault for future access.  #### Required permissions  - `write-authorizations` - `write-user` for the user that the authorization is scoped to  #### Related guides  - [Create a token](https://docs.influxdata.com/influxdb/latest/security/tokens/create-token/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.post_authorizations(authorization_post_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param AuthorizationPostRequest authorization_post_request: The authorization to create. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def post_authorizations_with_http_info(self, authorization_post_request, **kwargs):
        """
        Create an authorization.

        Creates an authorization and returns the authorization with the generated API [token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token).  Use this endpoint to create an authorization, which generates an API token with permissions to `read` or `write` to a specific resource or `type` of resource. The API token is the authorization's `token` property value.  To follow best practices for secure API token generation and retrieval, InfluxDB enforces access restrictions on API tokens.    - InfluxDB allows access to the API token value immediately after the authorization is created.   - You can’t change access (read/write) permissions for an API token after it’s created.   - Tokens stop working when the user who created the token is deleted.  We recommend the following for managing your tokens:    - Create a generic user to create and manage tokens for writing data.   - Store your tokens in a secure password vault for future access.  #### Required permissions  - `write-authorizations` - `write-user` for the user that the authorization is scoped to  #### Related guides  - [Create a token](https://docs.influxdata.com/influxdb/latest/security/tokens/create-token/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.post_authorizations_with_http_info(authorization_post_request, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param AuthorizationPostRequest authorization_post_request: The authorization to create. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def post_authorizations_async(self, authorization_post_request, **kwargs):
        """
        Create an authorization.

        Creates an authorization and returns the authorization with the generated API [token](https://docs.influxdata.com/influxdb/latest/reference/glossary/#token).  Use this endpoint to create an authorization, which generates an API token with permissions to `read` or `write` to a specific resource or `type` of resource. The API token is the authorization's `token` property value.  To follow best practices for secure API token generation and retrieval, InfluxDB enforces access restrictions on API tokens.    - InfluxDB allows access to the API token value immediately after the authorization is created.   - You can’t change access (read/write) permissions for an API token after it’s created.   - Tokens stop working when the user who created the token is deleted.  We recommend the following for managing your tokens:    - Create a generic user to create and manage tokens for writing data.   - Store your tokens in a secure password vault for future access.  #### Required permissions  - `write-authorizations` - `write-user` for the user that the authorization is scoped to  #### Related guides  - [Create a token](https://docs.influxdata.com/influxdb/latest/security/tokens/create-token/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param AuthorizationPostRequest authorization_post_request: The authorization to create. (required)
        :param str zap_trace_span: OpenTracing span context
        :return: Authorization
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
