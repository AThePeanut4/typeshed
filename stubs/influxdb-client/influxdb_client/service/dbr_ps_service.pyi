"""
InfluxDB OSS API Service.

The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.   # noqa: E501

OpenAPI spec version: 2.0.0
Generated by: https://openapi-generator.tech
"""

from _typeshed import Incomplete

from influxdb_client.service._base_service import _BaseService

class DBRPsService(_BaseService):
    """
    NOTE: This class is auto generated by OpenAPI Generator.

    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """
    def __init__(self, api_client: Incomplete | None = None) -> None:
        """DBRPsService - a operation defined in OpenAPI."""
        ...
    def delete_dbrpid(self, dbrp_id, **kwargs):
        """
        Delete a database retention policy.

        Deletes the specified database retention policy (DBRP) mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.delete_dbrpid(dbrp_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Only returns the specified DBRP mapping. (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def delete_dbrpid_with_http_info(self, dbrp_id, **kwargs):
        """
        Delete a database retention policy.

        Deletes the specified database retention policy (DBRP) mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.delete_dbrpid_with_http_info(dbrp_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Only returns the specified DBRP mapping. (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def delete_dbrpid_async(self, dbrp_id, **kwargs):
        """
        Delete a database retention policy.

        Deletes the specified database retention policy (DBRP) mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Only returns the specified DBRP mapping. (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_dbr_ps(self, **kwargs):
        """
        List database retention policy mappings.

        Lists database retention policy (DBRP) mappings.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_dbr_ps(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Only returns DBRP mappings for the specified organization.
        :param str org: An organization name. Only returns DBRP mappings for the specified organization.
        :param str id: A DBPR mapping ID. Only returns the specified DBRP mapping.
        :param str bucket_id: A bucket ID. Only returns DBRP mappings that belong to the specified bucket.
        :param bool default: Specifies filtering on default
        :param str db: A database. Only returns DBRP mappings that belong to the 1.x database.
        :param str rp: A [retention policy](https://docs.influxdata.com/influxdb/v1.8/concepts/glossary/#retention-policy-rp). Specifies the 1.x retention policy to filter on.
        :return: DBRPs
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_dbr_ps_with_http_info(self, **kwargs):
        """
        List database retention policy mappings.

        Lists database retention policy (DBRP) mappings.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_dbr_ps_with_http_info(async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Only returns DBRP mappings for the specified organization.
        :param str org: An organization name. Only returns DBRP mappings for the specified organization.
        :param str id: A DBPR mapping ID. Only returns the specified DBRP mapping.
        :param str bucket_id: A bucket ID. Only returns DBRP mappings that belong to the specified bucket.
        :param bool default: Specifies filtering on default
        :param str db: A database. Only returns DBRP mappings that belong to the 1.x database.
        :param str rp: A [retention policy](https://docs.influxdata.com/influxdb/v1.8/concepts/glossary/#retention-policy-rp). Specifies the 1.x retention policy to filter on.
        :return: DBRPs
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_dbr_ps_async(self, **kwargs):
        """
        List database retention policy mappings.

        Lists database retention policy (DBRP) mappings.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Only returns DBRP mappings for the specified organization.
        :param str org: An organization name. Only returns DBRP mappings for the specified organization.
        :param str id: A DBPR mapping ID. Only returns the specified DBRP mapping.
        :param str bucket_id: A bucket ID. Only returns DBRP mappings that belong to the specified bucket.
        :param bool default: Specifies filtering on default
        :param str db: A database. Only returns DBRP mappings that belong to the 1.x database.
        :param str rp: A [retention policy](https://docs.influxdata.com/influxdb/v1.8/concepts/glossary/#retention-policy-rp). Specifies the 1.x retention policy to filter on.
        :return: DBRPs
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_dbr_ps_id(self, dbrp_id, **kwargs):
        """
        Retrieve a database retention policy mapping.

        Retrieves the specified retention policy (DBRP) mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_dbr_ps_id(dbrp_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Specifies the DBRP mapping. (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: DBRPGet
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def get_dbr_ps_id_with_http_info(self, dbrp_id, **kwargs):
        """
        Retrieve a database retention policy mapping.

        Retrieves the specified retention policy (DBRP) mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.get_dbr_ps_id_with_http_info(dbrp_id, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Specifies the DBRP mapping. (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: DBRPGet
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def get_dbr_ps_id_async(self, dbrp_id, **kwargs):
        """
        Retrieve a database retention policy mapping.

        Retrieves the specified retention policy (DBRP) mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Specifies the DBRP mapping. (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: DBRPGet
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def patch_dbrpid(self, dbrp_id, dbrp_update, **kwargs):
        """
        Update a database retention policy mapping.

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.patch_dbrpid(dbrp_id, dbrp_update, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Specifies the DBRP mapping. (required)
        :param DBRPUpdate dbrp_update: Updates the database retention policy (DBRP) mapping and returns the mapping.  Use this endpoint to modify the _retention policy_ (`retention_policy` property) of a DBRP mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)  (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: DBRPGet
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def patch_dbrpid_with_http_info(self, dbrp_id, dbrp_update, **kwargs):
        """
        Update a database retention policy mapping.

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.patch_dbrpid_with_http_info(dbrp_id, dbrp_update, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Specifies the DBRP mapping. (required)
        :param DBRPUpdate dbrp_update: Updates the database retention policy (DBRP) mapping and returns the mapping.  Use this endpoint to modify the _retention policy_ (`retention_policy` property) of a DBRP mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)  (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: DBRPGet
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def patch_dbrpid_async(self, dbrp_id, dbrp_update, **kwargs):
        """
        Update a database retention policy mapping.

        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param str dbrp_id: A DBRP mapping ID. Specifies the DBRP mapping. (required)
        :param DBRPUpdate dbrp_update: Updates the database retention policy (DBRP) mapping and returns the mapping.  Use this endpoint to modify the _retention policy_ (`retention_policy` property) of a DBRP mapping.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)  (required)
        :param str zap_trace_span: OpenTracing span context
        :param str org_id: An organization ID. Specifies the organization that owns the DBRP mapping.
        :param str org: An organization name. Specifies the organization that owns the DBRP mapping.
        :return: DBRPGet
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def post_dbrp(self, dbrp_create, **kwargs):
        """
        Add a database retention policy mapping.

        Creates a database retention policy (DBRP) mapping and returns the mapping.  Use this endpoint to add InfluxDB 1.x API compatibility to your InfluxDB Cloud or InfluxDB OSS 2.x buckets. Your buckets must contain a DBRP mapping in order to query and write using the InfluxDB 1.x API. object.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.post_dbrp(dbrp_create, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param DBRPCreate dbrp_create: The database retention policy mapping to add.  Note that _`retention_policy`_ is a required parameter in the request body. The value of _`retention_policy`_ can be any arbitrary `string` name or value, with the default value commonly set as `autogen`. The value of _`retention_policy`_ isn't a [retention_policy](https://docs.influxdata.com/influxdb/latest/reference/glossary/#retention-policy-rp)  (required)
        :param str zap_trace_span: OpenTracing span context
        :return: DBRP
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    def post_dbrp_with_http_info(self, dbrp_create, **kwargs):
        """
        Add a database retention policy mapping.

        Creates a database retention policy (DBRP) mapping and returns the mapping.  Use this endpoint to add InfluxDB 1.x API compatibility to your InfluxDB Cloud or InfluxDB OSS 2.x buckets. Your buckets must contain a DBRP mapping in order to query and write using the InfluxDB 1.x API. object.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.post_dbrp_with_http_info(dbrp_create, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param DBRPCreate dbrp_create: The database retention policy mapping to add.  Note that _`retention_policy`_ is a required parameter in the request body. The value of _`retention_policy`_ can be any arbitrary `string` name or value, with the default value commonly set as `autogen`. The value of _`retention_policy`_ isn't a [retention_policy](https://docs.influxdata.com/influxdb/latest/reference/glossary/#retention-policy-rp)  (required)
        :param str zap_trace_span: OpenTracing span context
        :return: DBRP
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
    async def post_dbrp_async(self, dbrp_create, **kwargs):
        """
        Add a database retention policy mapping.

        Creates a database retention policy (DBRP) mapping and returns the mapping.  Use this endpoint to add InfluxDB 1.x API compatibility to your InfluxDB Cloud or InfluxDB OSS 2.x buckets. Your buckets must contain a DBRP mapping in order to query and write using the InfluxDB 1.x API. object.  #### Related guide  - [Database and retention policy mapping](https://docs.influxdata.com/influxdb/latest/reference/api/influxdb-1x/dbrp/)
        This method makes an asynchronous HTTP request.

        :param async_req bool
        :param DBRPCreate dbrp_create: The database retention policy mapping to add.  Note that _`retention_policy`_ is a required parameter in the request body. The value of _`retention_policy`_ can be any arbitrary `string` name or value, with the default value commonly set as `autogen`. The value of _`retention_policy`_ isn't a [retention_policy](https://docs.influxdata.com/influxdb/latest/reference/glossary/#retention-policy-rp)  (required)
        :param str zap_trace_span: OpenTracing span context
        :return: DBRP
                 If the method is called asynchronously,
                 returns the request thread.
        """
        ...
