"""functions for 2D affine transformations"""

def nullTransform(): ...
def translate(dx, dy): ...
def scale(sx, sy): ...
def rotate(angle): ...
def skewX(angle): ...
def skewY(angle): ...
def mmult(A, B):
    """A postmultiplied by B"""
    ...
def inverse(A):
    """For A affine 2D represented as 6vec return 6vec version of A**(-1)"""
    ...
def zTransformPoint(A, v):
    """Apply the homogenous part of atransformation a to vector v --> A*v"""
    ...
def transformPoint(A, v):
    """Apply transformation a to vector v --> A*v"""
    ...
def transformPoints(matrix, V): ...
def zTransformPoints(matrix, V): ...
